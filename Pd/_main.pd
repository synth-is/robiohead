#N canvas 765 -1415 1856 1387 12;
#X obj 195 523 hsl 128 15 0 6 0 0 empty empty empty -2 -8 0 10 #fcfcfc
#000000 #000000 0 1;
#X obj 360 471 vsl 15 128 0 23 0 0 empty empty empty 0 -9 0 10 #fcfcfc
#000000 #000000 0 1;
#X floatatom 360 671 5 0 0 0 - - - 0;
#X obj 360 641 mod 24;
#X floatatom 216 670 5 0 0 0 - - - 0;
#X obj 216 641 mod 7;
#X obj 217 743 pack f f;
#X obj 317 696 t b f;
#X obj 655 713 print latticePos;
#X obj 250 866 +;
#X obj 237 794 unpack f f;
#X obj 291 834 * 7;
#X text 214 504 7 steps;
#X text 211 469 7 x 24 lattice;
#X text 383 467 24 steps;
#X text 1109 1068 from dynamic sample loading based on: https://github.com/giuliomoro/dynamic-load-files-Pd
- via https://forum.bela.io/d/709-reading-multiple-samples-and-cpu-overload
, f 76;
#X obj 1112 1180 t b b b;
#X obj 1111 1158 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X msg 1137 1261 64;
#X text 1060 1205 This generates the dynamic loaders;
#X text 1205 1252 n voices;
#X obj 1067 1300 generate-dynamic-loaders \$0;
#X text 1123 1235 nOfFiles;
#X obj 1111 1133 loadbang;
#X text 1060 1215 every time the program is started;
#X obj 787 845 send \$0-trigger-playback;
#N canvas -1138 -979 1078 692 \$0-dynamic-loaders 0;
#X obj 0 40 receive 2667-trigger-playback;
#X obj 0 60 i;
#X obj 0 80 select 0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42
43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63;
#X obj 0 130 dynamic-load-file samples_test/sine0.wav 2667 0;
#X obj 10 151 dynamic-load-file samples_test/sine1.wav 2667 1;
#X obj 20 172 dynamic-load-file samples_test/sine2.wav 2667 2;
#X obj 30 193 dynamic-load-file samples_test/sine3.wav 2667 3;
#X obj 40 214 dynamic-load-file samples_test/sine4.wav 2667 4;
#X obj 50 235 dynamic-load-file samples_test/sine5.wav 2667 5;
#X obj 60 256 dynamic-load-file samples_test/sine6.wav 2667 6;
#X obj 70 277 dynamic-load-file samples_test/sine7.wav 2667 7;
#X obj 80 298 dynamic-load-file samples_test/sine8.wav 2667 8;
#X obj 90 319 dynamic-load-file samples_test/sine9.wav 2667 9;
#X obj 100 340 dynamic-load-file samples_test/sine10.wav 2667 10;
#X obj 110 361 dynamic-load-file samples_test/sine11.wav 2667 11;
#X obj 120 382 dynamic-load-file samples_test/sine12.wav 2667 12;
#X obj 130 403 dynamic-load-file samples_test/sine13.wav 2667 13;
#X obj 140 424 dynamic-load-file samples_test/sine14.wav 2667 14;
#X obj 150 445 dynamic-load-file samples_test/sine15.wav 2667 15;
#X obj 160 466 dynamic-load-file samples_test/sine16.wav 2667 0;
#X obj 170 487 dynamic-load-file samples_test/sine17.wav 2667 1;
#X obj 180 508 dynamic-load-file samples_test/sine18.wav 2667 2;
#X obj 190 529 dynamic-load-file samples_test/sine19.wav 2667 3;
#X obj 200 550 dynamic-load-file samples_test/sine20.wav 2667 4;
#X obj 210 571 dynamic-load-file samples_test/sine21.wav 2667 5;
#X obj 220 592 dynamic-load-file samples_test/sine22.wav 2667 6;
#X obj 230 613 dynamic-load-file samples_test/sine23.wav 2667 7;
#X obj 240 634 dynamic-load-file samples_test/sine24.wav 2667 8;
#X obj 250 655 dynamic-load-file samples_test/sine25.wav 2667 9;
#X obj 260 676 dynamic-load-file samples_test/sine26.wav 2667 10;
#X obj 270 697 dynamic-load-file samples_test/sine27.wav 2667 11;
#X obj 280 718 dynamic-load-file samples_test/sine28.wav 2667 12;
#X obj 290 739 dynamic-load-file samples_test/sine29.wav 2667 13;
#X obj 300 760 dynamic-load-file samples_test/sine30.wav 2667 14;
#X obj 310 781 dynamic-load-file samples_test/sine31.wav 2667 15;
#X obj 320 802 dynamic-load-file samples_test/sine32.wav 2667 0;
#X obj 330 823 dynamic-load-file samples_test/sine33.wav 2667 1;
#X obj 340 844 dynamic-load-file samples_test/sine34.wav 2667 2;
#X obj 350 865 dynamic-load-file samples_test/sine35.wav 2667 3;
#X obj 360 886 dynamic-load-file samples_test/sine36.wav 2667 4;
#X obj 370 907 dynamic-load-file samples_test/sine37.wav 2667 5;
#X obj 380 928 dynamic-load-file samples_test/sine38.wav 2667 6;
#X obj 390 949 dynamic-load-file samples_test/sine39.wav 2667 7;
#X obj 400 970 dynamic-load-file samples_test/sine40.wav 2667 8;
#X obj 410 991 dynamic-load-file samples_test/sine41.wav 2667 9;
#X obj 420 1012 dynamic-load-file samples_test/sine42.wav 2667 10;
#X obj 430 1033 dynamic-load-file samples_test/sine43.wav 2667 11;
#X obj 440 1054 dynamic-load-file samples_test/sine44.wav 2667 12;
#X obj 450 1075 dynamic-load-file samples_test/sine45.wav 2667 13;
#X obj 460 1096 dynamic-load-file samples_test/sine46.wav 2667 14;
#X obj 470 1117 dynamic-load-file samples_test/sine47.wav 2667 15;
#X obj 480 1138 dynamic-load-file samples_test/sine48.wav 2667 0;
#X obj 490 1159 dynamic-load-file samples_test/sine49.wav 2667 1;
#X obj 500 1180 dynamic-load-file samples_test/sine50.wav 2667 2;
#X obj 510 1201 dynamic-load-file samples_test/sine51.wav 2667 3;
#X obj 520 1222 dynamic-load-file samples_test/sine52.wav 2667 4;
#X obj 530 1243 dynamic-load-file samples_test/sine53.wav 2667 5;
#X obj 540 1264 dynamic-load-file samples_test/sine54.wav 2667 6;
#X obj 550 1285 dynamic-load-file samples_test/sine55.wav 2667 7;
#X obj 560 1306 dynamic-load-file samples_test/sine56.wav 2667 8;
#X obj 570 1327 dynamic-load-file samples_test/sine57.wav 2667 9;
#X obj 580 1348 dynamic-load-file samples_test/sine58.wav 2667 10;
#X obj 590 1369 dynamic-load-file samples_test/sine59.wav 2667 11;
#X obj 600 1390 dynamic-load-file samples_test/sine60.wav 2667 12;
#X obj 610 1411 dynamic-load-file samples_test/sine61.wav 2667 13;
#X obj 620 1432 dynamic-load-file samples_test/sine62.wav 2667 14;
#X obj 630 1453 dynamic-load-file samples_test/sine63.wav 2667 15;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 4 0;
#X connect 2 2 5 0;
#X connect 2 3 6 0;
#X connect 2 4 7 0;
#X connect 2 5 8 0;
#X connect 2 6 9 0;
#X connect 2 7 10 0;
#X connect 2 8 11 0;
#X connect 2 9 12 0;
#X connect 2 10 13 0;
#X connect 2 11 14 0;
#X connect 2 12 15 0;
#X connect 2 13 16 0;
#X connect 2 14 17 0;
#X connect 2 15 18 0;
#X connect 2 16 19 0;
#X connect 2 17 20 0;
#X connect 2 18 21 0;
#X connect 2 19 22 0;
#X connect 2 20 23 0;
#X connect 2 21 24 0;
#X connect 2 22 25 0;
#X connect 2 23 26 0;
#X connect 2 24 27 0;
#X connect 2 25 28 0;
#X connect 2 26 29 0;
#X connect 2 27 30 0;
#X connect 2 28 31 0;
#X connect 2 29 32 0;
#X connect 2 30 33 0;
#X connect 2 31 34 0;
#X connect 2 32 35 0;
#X connect 2 33 36 0;
#X connect 2 34 37 0;
#X connect 2 35 38 0;
#X connect 2 36 39 0;
#X connect 2 37 40 0;
#X connect 2 38 41 0;
#X connect 2 39 42 0;
#X connect 2 40 43 0;
#X connect 2 41 44 0;
#X connect 2 42 45 0;
#X connect 2 43 46 0;
#X connect 2 44 47 0;
#X connect 2 45 48 0;
#X connect 2 46 49 0;
#X connect 2 47 50 0;
#X connect 2 48 51 0;
#X connect 2 49 52 0;
#X connect 2 50 53 0;
#X connect 2 51 54 0;
#X connect 2 52 55 0;
#X connect 2 53 56 0;
#X connect 2 54 57 0;
#X connect 2 55 58 0;
#X connect 2 56 59 0;
#X connect 2 57 60 0;
#X connect 2 58 61 0;
#X connect 2 59 62 0;
#X connect 2 60 63 0;
#X connect 2 61 64 0;
#X connect 2 62 65 0;
#X connect 2 63 66 0;
#X restore 938 1132 pd \$0-dynamic-loaders;
#X obj 246 921 change;
#X obj 806 488 hsl 256 15 0 7 0 0 empty empty empty -2 -8 0 10 #fcfcfc
#000000 #000000 0 1;
#X text 803 439 Seven one-sided tetrominoes (for now \, may go for
the 19 fixed tetrominos): I O T J L S Z https://en.wikipedia.org/wiki/Tetromino
https://mathworld.wolfram.com/Tetromino.html, f 75;
#X obj 1318 1151 readsf-wrapper \$0 1 0.01;
#X obj 1318 1181 readsf-wrapper \$0 2 0.01;
#X obj 1320 1210 readsf-wrapper \$0 3 0.01;
#X obj 1320 1240 readsf-wrapper \$0 4 0.01;
#X obj 1322 1271 readsf-wrapper \$0 5 0.01;
#X obj 1322 1301 readsf-wrapper \$0 6 0.01;
#X obj 1324 1330 readsf-wrapper \$0 7 0.01;
#X obj 1317 1126 readsf-wrapper \$0 0 0.01;
#X obj 1323 1356 readsf-wrapper \$0 8 0.01;
#X obj 1324 1381 readsf-wrapper \$0 9 0.01;
#X obj 1324 1411 readsf-wrapper \$0 10 0.01;
#X obj 1326 1440 readsf-wrapper \$0 11 0.01;
#X obj 1326 1470 readsf-wrapper \$0 12 0.01;
#X obj 1328 1501 readsf-wrapper \$0 13 0.01;
#X obj 1328 1531 readsf-wrapper \$0 14 0.01;
#X obj 1330 1560 readsf-wrapper \$0 15 0.01;
#X obj 1577 1126 readsf-wrapper \$0 16 0.01;
#X obj 1578 1151 readsf-wrapper \$0 17 0.01;
#X obj 1578 1181 readsf-wrapper \$0 18 0.01;
#X obj 1580 1210 readsf-wrapper \$0 19 0.01;
#X obj 1580 1240 readsf-wrapper \$0 20 0.01;
#X obj 1582 1271 readsf-wrapper \$0 21 0.01;
#X obj 1582 1301 readsf-wrapper \$0 22 0.01;
#X obj 1584 1330 readsf-wrapper \$0 23 0.01;
#X obj 1583 1356 readsf-wrapper \$0 24 0.01;
#X obj 1584 1381 readsf-wrapper \$0 25 0.01;
#X obj 1584 1411 readsf-wrapper \$0 26 0.01;
#X obj 1586 1440 readsf-wrapper \$0 27 0.01;
#X obj 1586 1470 readsf-wrapper \$0 28 0.01;
#X obj 1588 1501 readsf-wrapper \$0 29 0.01;
#X obj 1588 1531 readsf-wrapper \$0 30 0.01;
#X obj 1590 1560 readsf-wrapper \$0 31 0.01;
#X msg 1216 1269 16;
#X obj 665 558 change;
#X obj 665 528 mod 8;
#X obj 258 1159 spigot;
#X obj 297 1130 == 1;
#X text 873 726 clipping on lattice boundaries;
#X obj 63 1185 s tPB;
#X obj 281 1223 s tPB;
#X obj 787 682 r tPB;
#X obj 229 1197 - 1;
#X obj 229 1223 s tPB;
#X obj 328 1223 s tPB;
#X obj 328 1197 + 1;
#X obj 377 1223 s tPB;
#X obj 787 819 spigot;
#X obj 799 727 > 0;
#X obj 833 726 < 168;
#X obj 665 582 s tetro;
#X obj 116 1104 r tetro;
#X obj 246 945 s latt;
#X obj 38 1106 r latt;
#X text 38 1082 one note;
#X obj 297 1104 r tetro;
#X obj 231 1106 r latt;
#X text 231 1082 I tetromino;
#X obj 501 1159 spigot;
#X obj 540 1104 r tetro;
#X obj 474 1106 r latt;
#X text 474 1082 O tetromino;
#X obj 540 1130 == 2;
#X obj 526 1223 s tPB;
#X obj 473 1197 - 7;
#X obj 473 1223 s tPB;
#X obj 575 1197 + 1;
#X obj 575 1223 s tPB;
#X obj 625 1223 s tPB;
#X obj 602 460 loadbang;
#X obj 377 1197 + 2;
#X obj 625 1197 - 6;
#X obj 726 1159 spigot;
#X obj 765 1104 r tetro;
#X obj 699 1106 r latt;
#X obj 751 1223 s tPB;
#X obj 698 1223 s tPB;
#X obj 800 1223 s tPB;
#X obj 850 1223 s tPB;
#X text 699 1082 T tetromino;
#X obj 765 1130 == 3;
#X obj 698 1197 - 1;
#X obj 800 1197 + 1;
#X obj 850 1197 - 7;
#X obj 67 1348 spigot;
#X obj 106 1292 r tetro;
#X obj 40 1292 r latt;
#X obj 92 1405 s tPB;
#X obj 39 1405 s tPB;
#X obj 141 1405 s tPB;
#X obj 191 1405 s tPB;
#X obj 39 1381 - 1;
#X text 40 1270 J tetromino;
#X obj 63 1159 spigot 0;
#X obj 116 1130 == 0;
#X obj 106 1316 == 4;
#X obj 141 1381 + 7;
#X obj 191 1381 + 14;
#X obj 277 1348 spigot;
#X obj 316 1292 r tetro;
#X obj 250 1292 r latt;
#X obj 253 1405 s tPB;
#X obj 301 1405 s tPB;
#X obj 351 1405 s tPB;
#X obj 401 1405 s tPB;
#X obj 351 1381 + 7;
#X obj 401 1381 + 14;
#X text 250 1270 L tetromino;
#X obj 301 1381 + 1;
#X obj 316 1316 == 5;
#X obj 484 1348 spigot;
#X obj 523 1292 r tetro;
#X obj 457 1292 r latt;
#X obj 512 1405 s tPB;
#X obj 464 1405 s tPB;
#X obj 558 1405 s tPB;
#X obj 608 1405 s tPB;
#X obj 558 1381 + 7;
#X text 457 1270 S tetromino;
#X obj 464 1381 - 1;
#X obj 608 1381 + 8;
#X obj 684 1348 spigot;
#X obj 723 1292 r tetro;
#X obj 657 1292 r latt;
#X obj 666 1405 s tPB;
#X obj 711 1405 s tPB;
#X obj 758 1405 s tPB;
#X obj 808 1405 s tPB;
#X text 657 1270 Z tetromino;
#X obj 711 1381 + 1;
#X obj 758 1381 + 6;
#X obj 808 1381 + 7;
#X obj 523 1316 == 6;
#X obj 723 1316 == 7;
#X obj 735 582 print change;
#X msg 603 506 0;
#X obj 609 485 bng 15 250 50 0 empty empty empty 17 7 0 10 #fcfcfc
#000000 #000000;
#X obj 199 195 r LSM9DS1fps;
#X obj 225 231 print fps;
#X obj 199 271 unpack 0 0 0;
#X text 304 195 fusion pose;
#X text 295 269 pitch rool yaw (heading) as messages;
#X text 309 232 unit is Degrees (angle) - pitch limited to -/+90;
#X text 112 347 remap to range: low2 + (value - low1) * (high2 - low2)
/ (high1 - low1), f 72;
#X obj 22 363 expr 0 + ($f1 - (-90)) * (6 - 0) / (90 - (-90));
#X floatatom 172 640 5 0 0 0 - - - 0;
#X obj 377 363 expr 0 + ($f1 - (-90)) * (23 - 0) / (90 - (-90));
#X floatatom 377 619 5 0 0 0 - - - 0;
#X obj 795 43 adc~ 3;
#X obj 795 75 *~ 1.2;
#X obj 840 356 sfalib/scalesiglin~ 0 1 50 1000;
#X obj 929 107 threshold~ 1.1 20 1.1 20;
#X obj 827 202 snapshot~;
#X obj 827 234 sig~;
#X obj 798 311 *~;
#X obj 901 311 *~;
#X msg 929 139 0;
#X msg 958 139 1;
#X msg 1063 139 1;
#X msg 1098 139 0;
#X obj 795 107 delwrite~ DL1 20;
#X obj 795 139 delread~ DL1 20;
#X text 923 476;
#X obj 742 335 loadbang;
#X obj 742 358 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 792 413 snapshot~;
#X text 885 1341 this approach to incrementally / dynamically loading
samples is performant enough \, but acting on the output \, e.g. with
a reverb or a filter is complex: TODO try out the performance from
the playAudioFile~ abstraction included with the accelerometer Bela
example https://learn.bela.io/tutorials/pure-data/sensors/accelerometer/
-- it has a n outlet which should be usable for processing the audio
signal further.;
#X text 36 1052 tetromino shapes \, or a single note position \, triggering
sample playback:, f 73;
#X text 856 39 soft membrane potentiometer for navigating different
tetrionomes \, used as chord-shapes in a tuning lattice;
#X text 96 411 TODO: integreate pose data when LSM9DS1 compiles!;
#X obj 742 377 metro 500;
#X text 811 378 this setting souldn't require a high sampling rate
;
#X obj 1128 731 lop~ 10;
#X obj 1128 758 sfalib/scalesiglog~ 0 0.4 0 10 1;
#X obj 786 881 rev1~;
#X obj 1148 787 snapshot~;
#X obj 1223 782 loadbang;
#X obj 1223 805 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 1223 824 metro 20;
#X text 841 879 TODO: need to obtain the audio signal from samples
playback into this reverb \, see comment below. Might also look into
fancier rewerbs: http://tre.ucsd.edu/wordpress/?p=625, f 37;
#X text 1192 706 flex sensor to control reverb TODO: at the same time
affecting duration?;
#X obj 1128 707 adc~ 4;
#X obj 1019 565 loadbang;
#X msg 1019 589 in 18 \, out 17;
#X obj 1019 613 s bela_setDigital;
#X obj 991 541 r bela_digitalIn18;
#X obj 991 596 tgl 15 0 empty empty empty 17 7 0 10 #fcfcfc #000000
#000000 0 1;
#X obj 991 639 s bela_digitalOut17;
#X text 1129 537 button for pausing samples playback \, so new lattice
positions can be navigated to silently, f 47;
#X obj 875 760 != 1;
#X obj 812 763 &&;
#X obj 844 793 &&;
#X obj 393 781 adc~ 5;
#X obj 393 805 lop~ 100;
#X obj 393 829 threshold~ 0.47 10 0.33 10;
#X obj 393 853 random 5;
#X obj 393 877 f;
#X obj 536 975 pack f f;
#X text 370 925 TODO: need to either figure out to add sample pack
references to the current dynamic sample loading approach or try the
playAudioFile~ approach discussed in a comment below;
#X text 651 662 **sample playback from triggers below**;
#X text 197 168 tilting for navigating a 2D tuning lattice;
#X text 1219 918 TODO \, possibly: swingVelocity from accelerometer
(as in Bela example) inversely affecting sample duration;
#X obj 625 903 t b f;
#X text 232 565 navigation of lattice cells, f 13;
#X text 391 717 accelerometer Y shake triggers another samplepack number
- emulating / faking actual sound gene evolution, f 32;
#X connect 0 0 5 0;
#X connect 1 0 3 0;
#X connect 2 0 7 0;
#X connect 3 0 2 0;
#X connect 4 0 6 0;
#X connect 5 0 4 0;
#X connect 6 0 10 0;
#X connect 7 0 6 0;
#X connect 7 1 6 1;
#X connect 9 0 27 0;
#X connect 10 0 9 0;
#X connect 10 1 11 0;
#X connect 11 0 9 1;
#X connect 16 0 21 0;
#X connect 16 1 18 0;
#X connect 16 2 62 0;
#X connect 17 0 16 0;
#X connect 18 0 21 1;
#X connect 23 0 17 0;
#X connect 27 0 81 0;
#X connect 28 0 64 0;
#X connect 62 0 21 2;
#X connect 63 0 79 0;
#X connect 63 0 163 0;
#X connect 64 0 63 0;
#X connect 65 0 69 0;
#X connect 65 0 71 0;
#X connect 65 0 74 0;
#X connect 65 0 99 0;
#X connect 66 0 65 1;
#X connect 70 0 8 0;
#X connect 70 0 77 0;
#X connect 70 0 76 0;
#X connect 70 0 78 0;
#X connect 71 0 72 0;
#X connect 74 0 73 0;
#X connect 76 0 25 0;
#X connect 76 0 231 0;
#X connect 77 0 219 0;
#X connect 78 0 219 1;
#X connect 80 0 123 0;
#X connect 82 0 122 0;
#X connect 84 0 66 0;
#X connect 85 0 65 0;
#X connect 87 0 92 0;
#X connect 87 0 93 0;
#X connect 87 0 95 0;
#X connect 87 0 100 0;
#X connect 88 0 91 0;
#X connect 89 0 87 0;
#X connect 91 0 87 1;
#X connect 93 0 94 0;
#X connect 95 0 96 0;
#X connect 98 0 165 0;
#X connect 99 0 75 0;
#X connect 100 0 97 0;
#X connect 101 0 104 0;
#X connect 101 0 110 0;
#X connect 101 0 111 0;
#X connect 101 0 112 0;
#X connect 102 0 109 0;
#X connect 103 0 101 0;
#X connect 109 0 101 1;
#X connect 110 0 105 0;
#X connect 111 0 106 0;
#X connect 112 0 107 0;
#X connect 113 0 116 0;
#X connect 113 0 120 0;
#X connect 113 0 125 0;
#X connect 113 0 126 0;
#X connect 114 0 124 0;
#X connect 115 0 113 0;
#X connect 120 0 117 0;
#X connect 122 0 68 0;
#X connect 123 0 122 1;
#X connect 124 0 113 1;
#X connect 125 0 118 0;
#X connect 126 0 119 0;
#X connect 127 0 130 0;
#X connect 127 0 134 0;
#X connect 127 0 135 0;
#X connect 127 0 137 0;
#X connect 128 0 138 0;
#X connect 129 0 127 0;
#X connect 134 0 132 0;
#X connect 135 0 133 0;
#X connect 137 0 131 0;
#X connect 138 0 127 1;
#X connect 139 0 142 0;
#X connect 139 0 146 0;
#X connect 139 0 148 0;
#X connect 139 0 149 0;
#X connect 140 0 161 0;
#X connect 141 0 139 0;
#X connect 146 0 144 0;
#X connect 148 0 143 0;
#X connect 149 0 145 0;
#X connect 150 0 153 0;
#X connect 150 0 158 0;
#X connect 150 0 159 0;
#X connect 150 0 160 0;
#X connect 151 0 162 0;
#X connect 152 0 150 0;
#X connect 158 0 154 0;
#X connect 159 0 155 0;
#X connect 160 0 156 0;
#X connect 161 0 139 1;
#X connect 162 0 150 1;
#X connect 164 0 79 0;
#X connect 165 0 164 0;
#X connect 166 0 167 0;
#X connect 166 0 168 0;
#X connect 168 0 173 0;
#X connect 168 1 175 0;
#X connect 173 0 174 0;
#X connect 175 0 176 0;
#X connect 177 0 178 0;
#X connect 178 0 180 0;
#X connect 178 0 189 0;
#X connect 179 0 194 0;
#X connect 180 0 185 0;
#X connect 180 0 186 0;
#X connect 180 0 181 0;
#X connect 180 1 187 0;
#X connect 180 1 188 0;
#X connect 181 0 182 0;
#X connect 182 0 184 0;
#X connect 183 0 179 0;
#X connect 184 0 179 0;
#X connect 185 0 183 1;
#X connect 186 0 184 1;
#X connect 187 0 183 1;
#X connect 188 0 184 1;
#X connect 190 0 181 0;
#X connect 190 0 183 0;
#X connect 192 0 193 0;
#X connect 193 0 199 0;
#X connect 194 0 64 0;
#X connect 199 0 194 0;
#X connect 201 0 202 0;
#X connect 202 0 204 0;
#X connect 204 0 203 1;
#X connect 205 0 206 0;
#X connect 206 0 207 0;
#X connect 207 0 204 0;
#X connect 210 0 201 0;
#X connect 211 0 212 0;
#X connect 212 0 213 0;
#X connect 214 0 215 0;
#X connect 215 0 216 0;
#X connect 215 0 218 0;
#X connect 218 0 220 1;
#X connect 219 0 220 0;
#X connect 220 0 76 1;
#X connect 221 0 222 0;
#X connect 222 0 223 0;
#X connect 223 0 224 0;
#X connect 224 0 225 0;
#X connect 225 0 226 0;
#X connect 231 0 226 0;
#X connect 231 1 226 1;
